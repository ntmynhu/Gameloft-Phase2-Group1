//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Inputs/PlayerControls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Land"",
            ""id"": ""e5e5d678-9da2-4263-8a30-59019a7cb604"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""a7999449-c049-4018-949e-25aecc3998ff"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SummonSkill"",
                    ""type"": ""Button"",
                    ""id"": ""d1dd0142-d8b6-4211-9af7-167aac852743"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=3)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlimeThachSkill"",
                    ""type"": ""Button"",
                    ""id"": ""de45a89c-29be-44d1-93ca-e611498b13db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NormalSkill"",
                    ""type"": ""Button"",
                    ""id"": ""b693e93d-a267-4ead-b216-8e16feb36343"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlimeThachSkillActivate"",
                    ""type"": ""Button"",
                    ""id"": ""01ae8d9e-ca6c-4cc6-82dc-b926813c968e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""895782dc-4aa9-4557-bb80-e54f5d417e42"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6912cfdf-a26b-4f6c-b875-8d8c29078552"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""569e77f7-b366-469a-ac14-7c3a9abb18f3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cad1779b-0c62-4c10-b87d-c705eef92930"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""53ef2bac-7ff5-4e10-bc89-bf7588725c26"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c42a4a30-a366-418e-b0a7-f6383da24ae8"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SummonSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7561f462-7f84-4357-86bd-ef38da2ba0ad"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlimeThachSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d64faedd-46b5-4028-b35d-b1c3b3a343c0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NormalSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f8fe962-f9b7-47ee-9b29-6c99537af7c8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlimeThachSkillActivate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Land
        m_Land = asset.FindActionMap("Land", throwIfNotFound: true);
        m_Land_Walk = m_Land.FindAction("Walk", throwIfNotFound: true);
        m_Land_SummonSkill = m_Land.FindAction("SummonSkill", throwIfNotFound: true);
        m_Land_SlimeThachSkill = m_Land.FindAction("SlimeThachSkill", throwIfNotFound: true);
        m_Land_NormalSkill = m_Land.FindAction("NormalSkill", throwIfNotFound: true);
        m_Land_SlimeThachSkillActivate = m_Land.FindAction("SlimeThachSkillActivate", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Land
    private readonly InputActionMap m_Land;
    private List<ILandActions> m_LandActionsCallbackInterfaces = new List<ILandActions>();
    private readonly InputAction m_Land_Walk;
    private readonly InputAction m_Land_SummonSkill;
    private readonly InputAction m_Land_SlimeThachSkill;
    private readonly InputAction m_Land_NormalSkill;
    private readonly InputAction m_Land_SlimeThachSkillActivate;
    public struct LandActions
    {
        private @PlayerControls m_Wrapper;
        public LandActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_Land_Walk;
        public InputAction @SummonSkill => m_Wrapper.m_Land_SummonSkill;
        public InputAction @SlimeThachSkill => m_Wrapper.m_Land_SlimeThachSkill;
        public InputAction @NormalSkill => m_Wrapper.m_Land_NormalSkill;
        public InputAction @SlimeThachSkillActivate => m_Wrapper.m_Land_SlimeThachSkillActivate;
        public InputActionMap Get() { return m_Wrapper.m_Land; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LandActions set) { return set.Get(); }
        public void AddCallbacks(ILandActions instance)
        {
            if (instance == null || m_Wrapper.m_LandActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LandActionsCallbackInterfaces.Add(instance);
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @SummonSkill.started += instance.OnSummonSkill;
            @SummonSkill.performed += instance.OnSummonSkill;
            @SummonSkill.canceled += instance.OnSummonSkill;
            @SlimeThachSkill.started += instance.OnSlimeThachSkill;
            @SlimeThachSkill.performed += instance.OnSlimeThachSkill;
            @SlimeThachSkill.canceled += instance.OnSlimeThachSkill;
            @NormalSkill.started += instance.OnNormalSkill;
            @NormalSkill.performed += instance.OnNormalSkill;
            @NormalSkill.canceled += instance.OnNormalSkill;
            @SlimeThachSkillActivate.started += instance.OnSlimeThachSkillActivate;
            @SlimeThachSkillActivate.performed += instance.OnSlimeThachSkillActivate;
            @SlimeThachSkillActivate.canceled += instance.OnSlimeThachSkillActivate;
        }

        private void UnregisterCallbacks(ILandActions instance)
        {
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @SummonSkill.started -= instance.OnSummonSkill;
            @SummonSkill.performed -= instance.OnSummonSkill;
            @SummonSkill.canceled -= instance.OnSummonSkill;
            @SlimeThachSkill.started -= instance.OnSlimeThachSkill;
            @SlimeThachSkill.performed -= instance.OnSlimeThachSkill;
            @SlimeThachSkill.canceled -= instance.OnSlimeThachSkill;
            @NormalSkill.started -= instance.OnNormalSkill;
            @NormalSkill.performed -= instance.OnNormalSkill;
            @NormalSkill.canceled -= instance.OnNormalSkill;
            @SlimeThachSkillActivate.started -= instance.OnSlimeThachSkillActivate;
            @SlimeThachSkillActivate.performed -= instance.OnSlimeThachSkillActivate;
            @SlimeThachSkillActivate.canceled -= instance.OnSlimeThachSkillActivate;
        }

        public void RemoveCallbacks(ILandActions instance)
        {
            if (m_Wrapper.m_LandActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILandActions instance)
        {
            foreach (var item in m_Wrapper.m_LandActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LandActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LandActions @Land => new LandActions(this);
    public interface ILandActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnSummonSkill(InputAction.CallbackContext context);
        void OnSlimeThachSkill(InputAction.CallbackContext context);
        void OnNormalSkill(InputAction.CallbackContext context);
        void OnSlimeThachSkillActivate(InputAction.CallbackContext context);
    }
}
